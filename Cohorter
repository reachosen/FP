-- ================================================
-- Flight Plan Query Scaffolding with Complications
-- ================================================
-- Purpose: Build index cases, phase windows, and classify
--          procedures + complications into Pre/Intra/Post
-- ================================================

-- 0) Seed cohort (replace MRNs as needed)
create or replace temporary table tmp_mrn as
select column1 as PrimaryMRN
from values
    ('MRN1'),
    ('MRN2'),
    ('MRN3');

-- 1) Subset cases to cohort
create or replace temporary table cases_subset as
select c.*
from cases c
join tmp_mrn m
  on c.PrimaryMRN = m.PrimaryMRN;

-- 2) Identify index cardiac case per MRN + encounter
create or replace temporary table index_case as
select *
from (
  select
      c.*,
      row_number() over (
        partition by c.PrimaryMRN, c.HOSPITALENCOUNTERKEY
        order by
          c.anesthesiastartinstant asc nulls last,
          c.SurgeryDate asc nulls last
      ) as rn
  from cases_subset c
  where
        (c.ProcShortName ilike any ('%NORWOOD%','%FONTAN%','%GLENN%','%ASO%','%VSD%','%AV CANAL%','%COARCT%','%VALVE%'))
     or (c.PrimaryProcedureName ilike any ('%TRANSPLANT%','%VAD%','%HEART%','%TETRALOGY%','%TRUNCUS%','%ARTERIAL SWITCH%'))
) x
where rn = 1;

-- 3) Join encounter for admit/discharge and define windows
create or replace temporary table index_case_with_enc as
select
    i.PrimaryMRN,
    i.HOSPITALENCOUNTERKEY,
    i.SurgicalCaseKey,
    i.SurgeryDate,
    i.anesthesiastartinstant,
    i.anesthesiaendinstant,
    ef.AdmitDateTime,
    ef.DischargeDateTime,
    i.PrimaryProcedureName,
    i.ProcShortName
from index_case i
left join EncounterFact ef
  on ef.EncounterKey = i.HOSPITALENCOUNTERKEY;

-- 4) Define phase windows
create or replace view V_FP_BASE as
select
    PrimaryMRN,
    HOSPITALENCOUNTERKEY,
    SurgicalCaseKey,
    PrimaryProcedureName,
    ProcShortName,
    SurgeryDate,
    coalesce(AdmitDateTime, dateadd(day,-180,SurgeryDate))   as PreOpStartDts,
    coalesce(anesthesiastartinstant, SurgeryDate)            as PreOpEndDts,
    coalesce(anesthesiastartinstant, SurgeryDate)            as IntraOpStartDts,
    coalesce(anesthesiaendinstant, SurgeryDate)              as IntraOpEndDts,
    coalesce(anesthesiaendinstant, SurgeryDate)              as PostOpStartDts,
    coalesce(DischargeDateTime, dateadd(day,540,SurgeryDate)) as PostOpEndDts
from index_case_with_enc;

-- 5) Classify procedure events into phases
create or replace view V_FP_EVENTS as
select
    p.PatientKey,
    p.EncounterKey,
    p.ProcedureName,
    p.ProcedureShortName,
    p.ProcedureCategory,
    p.ProcedureDate,
    p.procedurestartinstant,
    p.procedureendinstant,
    b.PrimaryMRN,
    b.SurgeryDate,
    case
      when p.procedurestartinstant <  b.PreOpEndDts then 'Pre-Op'
      when p.procedurestartinstant between b.IntraOpStartDts and b.IntraOpEndDts then 'Intra-Op'
      when p.procedurestartinstant >= b.PostOpStartDts then 'Post-Op'
      else 'Unclassified'
    end as Phase
from tmp_all_procs p
join V_FP_BASE b
  on p.EncounterKey = b.HOSPITALENCOUNTERKEY
 and p.ProcedureDate between b.PreOpStartDts and b.PostOpEndDts;

-- 6) Integrate complications (using ComplicationFact)
-- Assumption: ComplicationFact includes ComplicationKey, PatientKey, SurgicalCaseKey, ProcedureDurableKey, ProcedureKey, ComplicationName

create or replace view V_FP_COMPLICATIONS as
select
    cf.ComplicationKey,
    cf.PatientKey,
    cf.SurgicalCaseKey,
    cf.ProcedureDurableKey,
    cf.ProcedureKey,
    cf.ComplicationName,
    b.PrimaryMRN,
    b.HOSPITALENCOUNTERKEY,
    b.SurgeryDate,
    case
      when cf.SurgicalCaseKey = b.SurgicalCaseKey then 'Intra-Op'
      when b.AnesthesiaEndInstant is not null and b.DischargeDateTime is not null then 'Post-Op'
      else 'Unclassified'
    end as Phase
from ComplicationFact cf
join V_FP_BASE b
  on cf.PatientKey = b.SurgicalCaseKey  -- adjust join condition as needed based on schema
     or cf.SurgicalCaseKey = b.SurgicalCaseKey;

-- ================================================
-- End of Script
-- ================================================
