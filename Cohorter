CREATE OR REPLACE TEMP TABLE TEMP_MRN AS
SELECT '1234567'::VARCHAR AS MRN;  -- <- replace with your MRN

-- 1) Resolve MRN -> Encounter(s)
CREATE OR REPLACE TEMP TABLE TEMP_ENC AS
SELECT e.EncounterKey,
       e.AdmitInstant,
       e.DischargeInstant
FROM EncounterFact e
JOIN PatientDim p ON e.PatientKey = p.PatientKey
JOIN TEMP_MRN m ON p.MRN = m.MRN;

-- (Optional) pick one encounter: latest with a surgical case
CREATE OR REPLACE TEMP TABLE TEMP_TARGET_ENC AS
SELECT e.*
FROM TEMP_ENC e
JOIN SurgicalCaseFact s ON s.EncounterKey = e.EncounterKey
QUALIFY ROW_NUMBER() OVER (ORDER BY s.CaseStartInstant DESC) = 1;

-- 2) Anchor on SurgicalCaseFact (index case)
CREATE OR REPLACE TEMP TABLE TEMP_CASE AS
SELECT s.SurgicalCaseKey,
       s.EncounterKey,
       s.CaseStartInstant   AS SurgeryStart,
       s.CaseEndInstant     AS SurgeryEnd,
       s.PrimaryProcedureKey,
       pd.ProcedureName     AS PrimaryProcedureName,
       pd.ProcedureCode,
       pd.ProcedureCodeType
FROM SurgicalCaseFact s
JOIN TEMP_TARGET_ENC te ON te.EncounterKey = s.EncounterKey
LEFT JOIN ProcedureDim pd ON pd.ProcedureKey = s.PrimaryProcedureKey
QUALIFY ROW_NUMBER() OVER (PARTITION BY s.EncounterKey ORDER BY s.CaseStartInstant DESC) = 1;

-- 3) Phase bounds (admit/discharge + OR start/end)
CREATE OR REPLACE TEMP TABLE TEMP_BOUNDS AS
SELECT te.EncounterKey,
       te.AdmitInstant,
       te.DischargeInstant,
       c.SurgeryStart,
       c.SurgeryEnd,
       c.PrimaryProcedureName
FROM TEMP_TARGET_ENC te
JOIN TEMP_CASE c ON c.EncounterKey = te.EncounterKey;

-- 4) All procedures for the encounter
CREATE OR REPLACE TEMP TABLE TEMP_PROCS AS
SELECT f.ProcedureEventKey,
       f.EncounterKey,
       f.ProcedureStartInstant,
       f.ProcedureEndInstant,
       d.ProcedureName,
       d.ProcedureCategory,
       d.ProcedureCode,
       d.ProcedureCodeType
FROM ProcedureEventFact f
JOIN ProcedureDim d ON d.ProcedureKey = f.ProcedureKey
JOIN TEMP_BOUNDS b ON b.EncounterKey = f.EncounterKey;

-- 5) Label phases
CREATE OR REPLACE TEMP TABLE TEMP_LABELED AS
SELECT
  p.*,
  b.PrimaryProcedureName AS IndexSurgery,
  CASE
    WHEN p.ProcedureStartInstant <  b.SurgeryStart THEN 'PreOp'
    WHEN p.ProcedureStartInstant >= b.SurgeryStart
     AND p.ProcedureStartInstant <= b.SurgeryEnd   THEN 'IntraOp'
    WHEN p.ProcedureStartInstant >  b.SurgeryEnd
     AND (b.DischargeInstant IS NULL OR p.ProcedureStartInstant <= b.DischargeInstant) THEN 'PostOp'
    ELSE 'OutOfBounds'
  END AS Phase
FROM TEMP_PROCS p
JOIN TEMP_BOUNDS b ON b.EncounterKey = p.EncounterKey;
